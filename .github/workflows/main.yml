# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_DIR: build

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn Install
        run: yarn install

      - name: Yarn Build
        run: yarn build

      - name: Share Artifact Insdie Workflow
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_DIR }}
          path: ${{ env.BUILD_DIR }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.BUILD_DIR }}
          path: ${{ env.BUILD_DIR }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions

      - name: Deploy to S3
        working-directory: ${{ env.BUILD_DIR }}
        run: aws s3 sync . ${{ secrets.AWS_S3_BUCKET_NAME }} --delete

      - name: Create Cloudfront Invalidation
        working-directory: ${{ env.BUILD_DIR }}
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/*"
